// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TierlistServer.Infrastructure.Data;

#nullable disable

namespace TierlistServer.Migrations
{
    [DbContext(typeof(TierlistDbContext))]
    [Migration("20250928112655_AddUserEmailUniqueIndex")]
    partial class AddUserEmailUniqueIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TierlistServer.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundImage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("background_image");

                    b.Property<int>("RawgId")
                        .HasColumnType("integer")
                        .HasColumnName("rawg_id");

                    b.Property<string>("Tier")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("tier");

                    b.Property<int>("TierListId")
                        .HasColumnType("integer")
                        .HasColumnName("tier_list_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("TierListId");

                    b.ToTable("games");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.TierList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tier_lists");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.Game", b =>
                {
                    b.HasOne("TierlistServer.Domain.Entities.TierList", "TierList")
                        .WithMany("Games")
                        .HasForeignKey("TierListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TierList");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.TierList", b =>
                {
                    b.HasOne("TierlistServer.Domain.Entities.User", "User")
                        .WithOne("TierList")
                        .HasForeignKey("TierlistServer.Domain.Entities.TierList", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.TierList", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("TierlistServer.Domain.Entities.User", b =>
                {
                    b.Navigation("TierList");
                });
#pragma warning restore 612, 618
        }
    }
}
